#blocked = #ttg.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":954:0)
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:90", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @compute_position_kernel(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":954:0), %arg1: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":954:0), %arg2: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":954:0), %arg3: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":954:0)) attributes {noinline = false} {
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c0_i64 = arith.constant 0 : i64 loc(#loc1)
    %c1_i64 = arith.constant 1 : i64 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c511_i32 = arith.constant 511 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.extsi %0 : i32 to i64 loc(#loc3)
    %2 = tt.addptr %arg2, %1 : !tt.ptr<i32>, i64 loc(#loc4)
    %3 = tt.load %2 : !tt.ptr<i32> loc(#loc5)
    %4 = tt.addptr %arg3, %1 : !tt.ptr<i32>, i64 loc(#loc6)
    %5 = tt.load %4 : !tt.ptr<i32> loc(#loc7)
    %6 = scf.for %arg4 = %c0_i64 to %1 step %c1_i64 iter_args(%arg5 = %c0_i64) -> (i64)  : i64 {
      %16 = tt.addptr %arg3, %arg4 : !tt.ptr<i32>, i64 loc(#loc9)
      %17 = tt.load %16 : !tt.ptr<i32> loc(#loc10)
      %18 = arith.extsi %17 : i32 to i64 loc(#loc11)
      %19 = arith.addi %arg5, %18 : i64 loc(#loc11)
      scf.yield %19 : i64 loc(#loc12)
    } loc(#loc8)
    %7 = arith.addi %5, %c511_i32 : i32 loc(#loc28)
    %8 = arith.divsi %7, %c512_i32 : i32 loc(#loc29)
    %9 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc16)
    %10 = tt.splat %5 : i32 -> tensor<512xi32, #blocked> loc(#loc17)
    %11 = tt.addptr %arg0, %6 : !tt.ptr<i64>, i64 loc(#loc18)
    %12 = tt.splat %11 : !tt.ptr<i64> -> tensor<512x!tt.ptr<i64>, #blocked> loc(#loc19)
    %13 = tt.splat %3 : i32 -> tensor<512xi32, #blocked> loc(#loc20)
    scf.for %arg4 = %c0_i32 to %8 step %c1_i32  : i32 {
      %16 = arith.muli %arg4, %c512_i32 : i32 loc(#loc22)
      %17 = tt.splat %16 : i32 -> tensor<512xi32, #blocked> loc(#loc23)
      %18 = arith.addi %9, %17 : tensor<512xi32, #blocked> loc(#loc23)
      %19 = arith.cmpi slt, %18, %10 : tensor<512xi32, #blocked> loc(#loc17)
      %20 = tt.addptr %12, %18 : tensor<512x!tt.ptr<i64>, #blocked>, tensor<512xi32, #blocked> loc(#loc19)
      %21 = arith.addi %13, %18 : tensor<512xi32, #blocked> loc(#loc20)
      %22 = arith.extsi %21 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc24)
      tt.store %20, %22, %19 : tensor<512x!tt.ptr<i64>, #blocked> loc(#loc24)
    } loc(#loc21)
    %14 = tt.addptr %arg1, %1 : !tt.ptr<i32>, i64 loc(#loc25)
    %15 = arith.trunci %6 : i64 to i32 loc(#loc26)
    tt.store %14, %15 : !tt.ptr<i32> loc(#loc26)
    tt.return loc(#loc27)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":962:24)
#loc3 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":962:30)
#loc4 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":964:46)
#loc5 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":964:25)
#loc6 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":965:40)
#loc7 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":965:22)
#loc8 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":969:19)
#loc9 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":970:50)
#loc10 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":970:32)
#loc11 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":970:24)
#loc12 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":970:8)
#loc13 = loc("/usr/local/lib/python3.12/dist-packages/triton/language/standard.py":40:22)
#loc14 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":972:32)
#loc15 = loc("/usr/local/lib/python3.12/dist-packages/triton/language/standard.py":40:28)
#loc16 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":974:30)
#loc17 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":978:26)
#loc18 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":976:24)
#loc19 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":976:39)
#loc20 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":977:25)
#loc21 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":973:19)
#loc22 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":974:48)
#loc23 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":974:44)
#loc24 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":977:12)
#loc25 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":980:32)
#loc26 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":980:37)
#loc27 = loc("/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py":980:4)
#loc28 = loc(callsite(#loc13 at #loc14))
#loc29 = loc(callsite(#loc15 at #loc14))
