//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	compute_position_kernel // -- Begin function compute_position_kernel
                                        // @compute_position_kernel
.visible .entry compute_position_kernel(
	.param .u64 .ptr .global .align 1 compute_position_kernel_param_0,
	.param .u64 .ptr .global .align 1 compute_position_kernel_param_1,
	.param .u64 .ptr .global .align 1 compute_position_kernel_param_2,
	.param .u64 .ptr .global .align 1 compute_position_kernel_param_3,
	.param .u64 .ptr .global .align 1 compute_position_kernel_param_4
)
.reqntid 128
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<57>;
	.loc	1 954 0                         // forward_batch_info.py:954:0
$L__func_begin0:
	.loc	1 954 0                         // forward_batch_info.py:954:0

// %bb.0:
	ld.param.b64 	%rd51, [compute_position_kernel_param_3];
$L__tmp0:
	.loc	1 962 24                        // forward_batch_info.py:962:24
	mov.u32 	%r7, %ctaid.x;
	.loc	1 962 30                        // forward_batch_info.py:962:30
	cvt.u64.u32 	%rd1, %r7;
	ld.param.b64 	%rd24, [compute_position_kernel_param_2];
	.loc	1 964 46                        // forward_batch_info.py:964:46
	mul.wide.u32 	%rd25, %r7, 4;
	add.s64 	%rd21, %rd24, %rd25;
	.loc	1 964 25                        // forward_batch_info.py:964:25
	// begin inline asm
	mov.u32 %r5, 0x0;
	ld.global.b32 { %r5 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 965 40                        // forward_batch_info.py:965:40
	add.s64 	%rd22, %rd51, %rd25;
	.loc	1 965 22                        // forward_batch_info.py:965:22
	// begin inline asm
	mov.u32 %r6, 0x0;
	ld.global.b32 { %r6 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 969 19                        // forward_batch_info.py:969:19
	setp.eq.s32 	%p1, %r7, 0;
	mov.b64 	%rd54, 0;
	@%p1 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 19                          // forward_batch_info.py:0:19
	mov.b64 	%rd54, 0;
	mov.b64 	%rd52, %rd1;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 970 32                        // forward_batch_info.py:970:32
	// begin inline asm
	mov.u32 %r8, 0x0;
	ld.global.b32 { %r8 }, [ %rd51 + 0 ];
	// end inline asm
	.loc	1 970 24                        // forward_batch_info.py:970:24
	cvt.s64.s32 	%rd28, %r8;
	add.s64 	%rd54, %rd54, %rd28;
	.loc	1 969 19                        // forward_batch_info.py:969:19
	add.s64 	%rd52, %rd52, -1;
	add.s64 	%rd51, %rd51, 4;
	setp.ne.s64 	%p2, %rd52, 0;
	@%p2 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	.loc	1 0 19                          // forward_batch_info.py:0:19
	ld.param.b64 	%rd19, [compute_position_kernel_param_1];
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22 @[ forward_batch_info.py:972:32 ]
	add.s32 	%r3, %r6, 511;
$L__tmp2:
	.loc	1 974 30                        // forward_batch_info.py:974:30
	mov.u32 	%r4, %tid.x;
	.loc	1 973 19                        // forward_batch_info.py:973:19
	setp.lt.s32 	%p3, %r3, 512;
	@%p3 bra 	$L__BB0_6;
// %bb.4:                               // %.lr.ph4.preheader
	.loc	1 0 19                          // forward_batch_info.py:0:19
	ld.param.b64 	%rd18, [compute_position_kernel_param_0];
	.loc	1 974 30                        // forward_batch_info.py:974:30
	and.b32 	%r9, %r4, 127;
	.loc	1 973 19                        // forward_batch_info.py:973:19
	cvt.u64.u32 	%rd9, %r9;
	cvt.u64.u32 	%rd10, %r6;
	and.b32 	%r10, %r3, -512;
	cvt.u64.u32 	%rd11, %r10;
	add.s32 	%r11, %r5, %r9;
	cvt.u64.u32 	%rd12, %r11;
	shl.b64 	%rd30, %rd54, 3;
	mul.wide.u32 	%rd31, %r9, 8;
	add.s64 	%rd32, %rd30, %rd31;
	add.s64 	%rd55, %rd18, %rd32;
	mov.b64 	%rd56, 0;
$L__BB0_5:                              // %.lr.ph4
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 974 44                        // forward_batch_info.py:974:44
	add.s64 	%rd41, %rd9, %rd56;
	add.s64 	%rd42, %rd41, 128;
	add.s64 	%rd43, %rd41, 256;
	.loc	1 978 26                        // forward_batch_info.py:978:26
	add.s64 	%rd44, %rd41, 384;
	setp.lt.s64 	%p4, %rd41, %rd10;
	setp.lt.s64 	%p5, %rd42, %rd10;
	setp.lt.s64 	%p6, %rd43, %rd10;
	setp.lt.s64 	%p7, %rd44, %rd10;
	.loc	1 976 39                        // forward_batch_info.py:976:39
	add.s64 	%rd36, %rd55, 1024;
	add.s64 	%rd38, %rd55, 2048;
	.loc	1 977 25                        // forward_batch_info.py:977:25
	add.s64 	%rd40, %rd55, 3072;
	add.s64 	%rd45, %rd12, %rd56;
	add.s64 	%rd46, %rd45, 128;
	add.s64 	%rd47, %rd45, 256;
	add.s64 	%rd48, %rd45, 384;
	.loc	1 977 12                        // forward_batch_info.py:977:12
	cvt.s64.s32 	%rd33, %rd45;
	cvt.s64.s32 	%rd35, %rd46;
	cvt.s64.s32 	%rd37, %rd47;
	cvt.s64.s32 	%rd39, %rd48;
	// begin inline asm
	@%p4 st.global.b64 [ %rd55 + 0 ], { %rd33 };
	// end inline asm
	// begin inline asm
	@%p5 st.global.b64 [ %rd36 + 0 ], { %rd35 };
	// end inline asm
	// begin inline asm
	@%p6 st.global.b64 [ %rd38 + 0 ], { %rd37 };
	// end inline asm
	// begin inline asm
	@%p7 st.global.b64 [ %rd40 + 0 ], { %rd39 };
	// end inline asm
	.loc	1 973 19                        // forward_batch_info.py:973:19
	add.s64 	%rd56, %rd56, 512;
	add.s64 	%rd55, %rd55, 4096;
	setp.ne.s64 	%p8, %rd11, %rd56;
	@%p8 bra 	$L__BB0_5;
$L__BB0_6:                              // %._crit_edge5
	.loc	1 980 32                        // forward_batch_info.py:980:32
	shl.b64 	%rd50, %rd1, 2;
	add.s64 	%rd49, %rd19, %rd50;
	.loc	1 980 37                        // forward_batch_info.py:980:37
	cvt.u32.u64 	%r12, %rd54;
	setp.eq.s32 	%p9, %r4, 0;
	// begin inline asm
	@%p9 st.global.b32 [ %rd49 + 0 ], { %r12 };
	// end inline asm
	.loc	1 980 4                         // forward_batch_info.py:980:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/sgl-workspace/sglang/python/sglang/srt/model_executor/forward_batch_info.py"
	.file	2 "/usr/local/lib/python3.12/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 5                                   // DW_FORM_data2
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 172                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 102                                 // DW_AT_name
.b8 111
.b8 114
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 105
.b8 110
.b8 102
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 115
.b8 103
.b8 108
.b8 45
.b8 119
.b8 111
.b8 114
.b8 107
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 115
.b8 103
.b8 108
.b8 97
.b8 110
.b8 103
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 47
.b8 115
.b8 103
.b8 108
.b8 97
.b8 110
.b8 103
.b8 47
.b8 115
.b8 114
.b8 116
.b8 47
.b8 109
.b8 111
.b8 100
.b8 101
.b8 108
.b8 95
.b8 101
.b8 120
.b8 101
.b8 99
.b8 117
.b8 116
.b8 111
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x66:0x1a DW_TAG_subprogram
.b8 99                                  // DW_AT_name
.b8 111
.b8 109
.b8 112
.b8 117
.b8 116
.b8 101
.b8 95
.b8 112
.b8 111
.b8 115
.b8 105
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x80:0x2f DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 102                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x95:0x19 DW_TAG_inlined_subroutine
.b32 102                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 204                                 // DW_AT_call_line
.b8 3
.b8 32                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
