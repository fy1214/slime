#loc = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1926:0)
#loc31 = loc("/usr/local/lib/python3.12/dist-packages/triton/language/standard.py":31:0)
module {
  tt.func public @write_req_to_token_pool_triton(%arg0: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1926:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1926:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1926:0), %arg3: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1926:0), %arg4: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1926:0), %arg5: !tt.ptr<i64> loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1926:0)) attributes {noinline = false} {
    %0 = tt.get_program_id x : i32 loc(#loc1)
    %1 = tt.addptr %arg1, %0 : !tt.ptr<i64>, i32 loc(#loc2)
    %2 = tt.load %1 : !tt.ptr<i64> loc(#loc3)
    %3 = tt.addptr %arg2, %0 : !tt.ptr<i64>, i32 loc(#loc4)
    %4 = tt.load %3 : !tt.ptr<i64> loc(#loc5)
    %5 = tt.addptr %arg3, %0 : !tt.ptr<i64>, i32 loc(#loc6)
    %6 = tt.load %5 : !tt.ptr<i64> loc(#loc7)
    %c0_i32 = arith.constant 0 : i32 loc(#loc8)
    %7 = arith.extsi %c0_i32 : i32 to i64 loc(#loc8)
    %c0_i32_0 = arith.constant 0 : i32 loc(#loc9)
    %c1_i32 = arith.constant 1 : i32 loc(#loc9)
    %8 = arith.bitcast %c0_i32_0 : i32 to i32 loc(#loc9)
    %9 = arith.bitcast %0 : i32 to i32 loc(#loc9)
    %10 = arith.bitcast %c1_i32 : i32 to i32 loc(#loc9)
    %11 = ub.poison : i32 loc(#loc9)
    %12 = scf.for %arg6 = %8 to %9 step %10 iter_args(%arg7 = %7) -> (i64)  : i32 {
      %19 = tt.addptr %arg4, %arg6 : !tt.ptr<i64>, i32 loc(#loc10)
      %20 = tt.load %19 : !tt.ptr<i64> loc(#loc11)
      %21 = arith.addi %arg7, %20 : i64 loc(#loc12)
      scf.yield %21 : i64 loc(#loc13)
    } loc(#loc9)
    %13 = arith.subi %6, %4 : i64 loc(#loc14)
    %14 = tt.call @"triton.language.standard.cdiv__i64__(1,)cconstexpr_512_"(%13) : (i64) -> i64 loc(#loc15)
    %c0_i32_1 = arith.constant 0 : i32 loc(#loc16)
    %c1_i32_2 = arith.constant 1 : i32 loc(#loc16)
    %15 = arith.extsi %c0_i32_1 : i32 to i64 loc(#loc16)
    %16 = arith.bitcast %14 : i64 to i64 loc(#loc16)
    %17 = arith.extsi %c1_i32_2 : i32 to i64 loc(#loc16)
    %18 = ub.poison : i64 loc(#loc16)
    scf.for %arg6 = %15 to %16 step %17  : i64 {
      %19 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc17)
      %c512_i32 = arith.constant 512 : i32 loc(#loc18)
      %c512_i64 = arith.constant 512 : i64 loc(#loc18)
      %20 = arith.muli %arg6, %c512_i64 : i64 loc(#loc18)
      %21 = arith.extsi %19 : tensor<512xi32> to tensor<512xi64> loc(#loc19)
      %22 = tt.splat %20 : i64 -> tensor<512xi64> loc(#loc19)
      %23 = arith.addi %21, %22 : tensor<512xi64> loc(#loc19)
      %24 = arith.subi %6, %4 : i64 loc(#loc20)
      %25 = tt.splat %24 : i64 -> tensor<512xi64> loc(#loc21)
      %26 = arith.cmpi slt, %23, %25 : tensor<512xi64> loc(#loc21)
      %27 = tt.addptr %arg5, %12 : !tt.ptr<i64>, i64 loc(#loc22)
      %28 = tt.splat %27 : !tt.ptr<i64> -> tensor<512x!tt.ptr<i64>> loc(#loc23)
      %29 = tt.addptr %28, %23 : tensor<512x!tt.ptr<i64>>, tensor<512xi64> loc(#loc23)
      %30 = tt.load %29, %26 : tensor<512x!tt.ptr<i64>> loc(#loc24)
      %c32772_i32 = arith.constant 32772 : i32 loc(#loc25)
      %c32772_i64 = arith.constant 32772 : i64 loc(#loc25)
      %31 = arith.muli %2, %c32772_i64 : i64 loc(#loc25)
      %32 = tt.addptr %arg0, %31 : !tt.ptr<i32>, i64 loc(#loc26)
      %33 = tt.splat %32 : !tt.ptr<i32> -> tensor<512x!tt.ptr<i32>> loc(#loc27)
      %34 = tt.addptr %33, %23 : tensor<512x!tt.ptr<i32>>, tensor<512xi64> loc(#loc27)
      %35 = tt.splat %4 : i64 -> tensor<512xi64> loc(#loc28)
      %36 = tt.addptr %34, %35 : tensor<512x!tt.ptr<i32>>, tensor<512xi64> loc(#loc28)
      %37 = arith.trunci %30 : tensor<512xi64> to tensor<512xi32> loc(#loc29)
      tt.store %36, %37, %26 : tensor<512x!tt.ptr<i32>> loc(#loc29)
    } loc(#loc16)
    tt.return loc(#loc30)
  } loc(#loc)
  tt.func private @"triton.language.standard.cdiv__i64__(1,)cconstexpr_512_"(%arg0: i64 loc("/usr/local/lib/python3.12/dist-packages/triton/language/standard.py":31:0)) -> i64 attributes {noinline = false} {
    %c512_i32 = arith.constant 512 : i32 loc(#loc32)
    %c512_i64 = arith.constant 512 : i64 loc(#loc32)
    %0 = arith.addi %arg0, %c512_i64 : i64 loc(#loc32)
    %c1_i32 = arith.constant 1 : i32 loc(#loc33)
    %c1_i64 = arith.constant 1 : i64 loc(#loc33)
    %1 = arith.subi %0, %c1_i64 : i64 loc(#loc33)
    %c512_i32_0 = arith.constant 512 : i32 loc(#loc34)
    %c512_i64_1 = arith.constant 512 : i64 loc(#loc34)
    %2 = arith.divsi %1, %c512_i64_1 : i64 loc(#loc34)
    tt.return %2 : i64 loc(#loc35)
  ^bb1:  // no predecessors
    %3 = ub.poison : i64 loc(#loc36)
    tt.return %3 : i64 loc(#loc36)
  } loc(#loc31)
} loc(#loc)
#loc1 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1936:24)
#loc2 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1938:48)
#loc3 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1938:29)
#loc4 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1939:33)
#loc5 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1939:22)
#loc6 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1940:33)
#loc7 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1940:22)
#loc8 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1943:30)
#loc9 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1944:19)
#loc10 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1945:46)
#loc11 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1945:32)
#loc12 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1945:24)
#loc13 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1945:8)
#loc14 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1947:33)
#loc15 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1947:42)
#loc16 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1948:19)
#loc17 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1949:30)
#loc18 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1949:48)
#loc19 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1949:44)
#loc20 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1950:35)
#loc21 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1950:25)
#loc22 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1951:40)
#loc23 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1951:55)
#loc24 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1951:24)
#loc25 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1954:31)
#loc26 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1954:14)
#loc27 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1955:14)
#loc28 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1956:14)
#loc29 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1957:12)
#loc30 = loc("/sgl-workspace/sglang/python/sglang/srt/managers/schedule_batch.py":1948:4)
#loc32 = loc("/usr/local/lib/python3.12/dist-packages/triton/language/standard.py":40:16)
#loc33 = loc("/usr/local/lib/python3.12/dist-packages/triton/language/standard.py":40:22)
#loc34 = loc("/usr/local/lib/python3.12/dist-packages/triton/language/standard.py":40:28)
#loc35 = loc("/usr/local/lib/python3.12/dist-packages/triton/language/standard.py":40:11)
#loc36 = loc("/usr/local/lib/python3.12/dist-packages/triton/language/standard.py":40:4)
